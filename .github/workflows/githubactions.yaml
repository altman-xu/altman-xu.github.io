name: githubactions # yml文件名

env:
  GIT_USER: altman-xu
  GIT_EMAIL: xuzhihua1107@gmail.com
  DEPLOY_REPO: altman-xu/altman-xu.github.io
  DEPLOY_BRANCH: master 

on:
  push:
    branches:
      - source    # 仅当推送 source 分支时才运行工作流程

jobs:
  build-and-deploy: # 任务名
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source               # 下载 source 分支代码
        uses: actions/checkout@v2
        with: 
          ref: source
      - name: Setup Nodejs                  # 安装 node.js
        uses: actions/setup-node@v2
        with:
          node-version: '10'
      - name: Cache node modules            # 缓存 node
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: Install npm dependency
        continue-on-error: true
        run: |
          npm install                                       # 在根目录安装站点需要的依赖
          npm install -g hexo-cli                           # 在 CI 环境内安装 Hexo
          npm install hexo-wordcount --save                 # 安装插件 hexo-wordcount
          npm install hexo-generator-json-content --save    # 安装插件 hexo-generator-json-content
          npm install hexo-generator-feed --save            # 安装插件 hexo-generator-feed
          npm install hexo-generator-sitemap --save         # 安装插件 hexo-generator-sitemap
          npm install hexo-generator-baidu-sitemap --save   # 安装插件 hexo-generator-baidu-sitemap
          npm install hexo-deployer-git --save              # 安装插件 用来执行 hexo deploy
      - name: Setup Git                   # 设置 git 环境变量
        run: |
          git config --global user.name $GIT_USER
          git config --global user.email $GIT_EMAIL
      - name: Setup SSH Key               # 设置 sshkey
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_DEPLOY_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan github.com >> ~/.ssh/known_hosts
      - name: hexo generate
        run: |
          hexo clean
          hexo generate
      - name: hexo deploy
        run: |
          hexo deploy

      # - name: hexo Generate
      #   run: |
      #     hexo generate
      #     ls -alhR
      #     # node ./coupons.js  # 要运行的js脚本，放在根目录下
      # - name: Deploy
      #   uses: peaceiris/actions-gh-pages@v3
      #   with:
      #     deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
      #     user_name: altman-xu
      #     user_email: xuzhihua1107@gmail.com
      #     # 获取提交文章源码时的commit message，作为发布gh-pages分支的信息
      #     commit_message: ${{ github.event.head_commit.message }}
      #     full_commit_message: ${{ github.event.head_commit.message }}
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     # GITHUB_TOKEN不是个人访问令牌，GitHub Actions 运行器会自动创建一个GITHUB_TOKEN密钥以在您的工作流程中进行身份验证。因此，您无需任何配置即可立即开始部​​署
      #     publish_dir: ./public
      #     allow_empty_commit: true # 允许空提交
      #           # Use the output from the `deploy` step(use for test action)
      # - name: Get the output
      #   run: |
      #     echo "${{ steps.deploy.outputs.notify }}"

## ssh-keygen -t rsa -b 4096 -C "xuzhihua1107@gmail.com" -f gh-pages -N ""
## ssh-keygen -t ed25519 -C "xuzhihua1107@gmail.com"